@model AegeanThesis.Models.ThesisForm

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>ThesisForm</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Supervisor)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Supervisor)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NumStudents)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NumStudents)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Purpose)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Purpose)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PrereqLessons)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PrereqLessons)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PrereqKnowledge)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PrereqKnowledge)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StudentInfo)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StudentInfo)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AnnouncDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AnnouncDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AdoptionDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AdoptionDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FinishDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FinishDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Grade)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Grade)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Assigned)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Assigned)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Approved)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Approved)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ReadyPres)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ReadyPres)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>
<div>
    <h2>Chat</h2>
    <div class="container">
        <input type="text" id="message" />
        <input type="button" id="sendmessage" value="Send" />
        <input type="hidden" id="displayname" />
        <ul id="discussion"></ul>
    </div>
    @section scripts {
        <!--Script references. -->
        <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
        <!--Reference the SignalR library. -->
        <script src="~/Scripts/jquery.signalR-2.2.2.js"></script>
        <!--Reference the autogenerated SignalR hub script. -->
        <script src="~/signalr/hubs"></script>
        <!--SignalR script to update the chat page and send messages.-->
        <script>
            $(function () {
                // Reference the auto-generated proxy for the hub.
                var chat = $.connection.chatHub;
                // Create a function that the hub can call back to display messages.
                chat.client.addNewMessageToPage = function (name, message) {
                    // Add the message to the page.
                    $('#discussion').append('<li><strong>' + htmlEncode(name)
                        + '</strong>: ' + htmlEncode(message) + '</li>');
                };
                // Get the user name and store it to prepend to messages.               
                $('#displayname').val('@Startup.curr_user');
                // Set initial focus to message input box.
                $('#message').focus();
                // Start the connection.
                $.connection.hub.start().done(function () {
                    $('#sendmessage').click(function () {
                        // Call the Send method on the hub.
                        chat.server.send($('#displayname').val(), $('#message').val());
                        // Clear text box and reset focus for next comment.
                        $('#message').val('').focus();
                    });
                });
            });
            // This optional function html-encodes messages for display in the page.
            function htmlEncode(value) {
                var encodedValue = $('<div />').text(value).html();
                return encodedValue;
            }
        </script>
    }
</div>
